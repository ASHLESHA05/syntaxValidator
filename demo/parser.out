Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statements
Rule 1     statements -> type ID function SEMICOLON
Rule 2     type -> INT
Rule 3     type -> FLOAT
Rule 4     type -> CHAR
Rule 5     type -> DOUBLE
Rule 6     type -> VOID
Rule 7     function -> LPRAN arguments RPRAN
Rule 8     arguments -> type
Rule 9     arguments -> arguments COMMA type
Rule 10    arguments -> type ID
Rule 11    arguments -> arguments COMMA type ID
Rule 12    arguments -> type dArray
Rule 13    arguments -> arguments COMMA type dArray
Rule 14    arguments -> type Array
Rule 15    arguments -> arguments COMMA type Array
Rule 16    dArray -> ID Array
Rule 17    dArray -> SQBRACL SQBRACR
Rule 18    dArray -> ID SQBRACL SQBRACR
Rule 19    dArray -> ID SQBRACL SQBRACR Array
Rule 20    dArray -> SQBRACL SQBRACR Array
Rule 21    Array -> SQBRACL NUM SQBRACR
Rule 22    Array -> SQBRACL NUM SQBRACR Array

Terminals, with rules where they appear

CHAR                 : 4
COMMA                : 9 11 13 15
DOUBLE               : 5
FLOAT                : 3
ID                   : 1 10 11 16 18 19
INT                  : 2
LPRAN                : 7
NUM                  : 21 22
RPRAN                : 7
SEMICOLON            : 1
SQBRACL              : 17 18 19 20 21 22
SQBRACR              : 17 18 19 20 21 22
VOID                 : 6
error                : 

Nonterminals, with rules where they appear

Array                : 14 15 16 19 20 22
arguments            : 7 9 11 13 15
dArray               : 12 13
function             : 1
statements           : 0
type                 : 1 8 9 10 11 12 13 14 15

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . type ID function SEMICOLON
    (2) type -> . INT
    (3) type -> . FLOAT
    (4) type -> . CHAR
    (5) type -> . DOUBLE
    (6) type -> . VOID

    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5
    DOUBLE          shift and go to state 6
    VOID            shift and go to state 7

    statements                     shift and go to state 1
    type                           shift and go to state 2

state 1

    (0) S' -> statements .



state 2

    (1) statements -> type . ID function SEMICOLON

    ID              shift and go to state 8


state 3

    (2) type -> INT .

    ID              reduce using rule 2 (type -> INT .)
    SQBRACL         reduce using rule 2 (type -> INT .)
    RPRAN           reduce using rule 2 (type -> INT .)
    COMMA           reduce using rule 2 (type -> INT .)


state 4

    (3) type -> FLOAT .

    ID              reduce using rule 3 (type -> FLOAT .)
    SQBRACL         reduce using rule 3 (type -> FLOAT .)
    RPRAN           reduce using rule 3 (type -> FLOAT .)
    COMMA           reduce using rule 3 (type -> FLOAT .)


state 5

    (4) type -> CHAR .

    ID              reduce using rule 4 (type -> CHAR .)
    SQBRACL         reduce using rule 4 (type -> CHAR .)
    RPRAN           reduce using rule 4 (type -> CHAR .)
    COMMA           reduce using rule 4 (type -> CHAR .)


state 6

    (5) type -> DOUBLE .

    ID              reduce using rule 5 (type -> DOUBLE .)
    SQBRACL         reduce using rule 5 (type -> DOUBLE .)
    RPRAN           reduce using rule 5 (type -> DOUBLE .)
    COMMA           reduce using rule 5 (type -> DOUBLE .)


state 7

    (6) type -> VOID .

    ID              reduce using rule 6 (type -> VOID .)
    SQBRACL         reduce using rule 6 (type -> VOID .)
    RPRAN           reduce using rule 6 (type -> VOID .)
    COMMA           reduce using rule 6 (type -> VOID .)


state 8

    (1) statements -> type ID . function SEMICOLON
    (7) function -> . LPRAN arguments RPRAN

    LPRAN           shift and go to state 10

    function                       shift and go to state 9

state 9

    (1) statements -> type ID function . SEMICOLON

    SEMICOLON       shift and go to state 11


state 10

    (7) function -> LPRAN . arguments RPRAN
    (8) arguments -> . type
    (9) arguments -> . arguments COMMA type
    (10) arguments -> . type ID
    (11) arguments -> . arguments COMMA type ID
    (12) arguments -> . type dArray
    (13) arguments -> . arguments COMMA type dArray
    (14) arguments -> . type Array
    (15) arguments -> . arguments COMMA type Array
    (2) type -> . INT
    (3) type -> . FLOAT
    (4) type -> . CHAR
    (5) type -> . DOUBLE
    (6) type -> . VOID

    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5
    DOUBLE          shift and go to state 6
    VOID            shift and go to state 7

    arguments                      shift and go to state 12
    type                           shift and go to state 13

state 11

    (1) statements -> type ID function SEMICOLON .

    $end            reduce using rule 1 (statements -> type ID function SEMICOLON .)


state 12

    (7) function -> LPRAN arguments . RPRAN
    (9) arguments -> arguments . COMMA type
    (11) arguments -> arguments . COMMA type ID
    (13) arguments -> arguments . COMMA type dArray
    (15) arguments -> arguments . COMMA type Array

    RPRAN           shift and go to state 14
    COMMA           shift and go to state 15


state 13

    (8) arguments -> type .
    (10) arguments -> type . ID
    (12) arguments -> type . dArray
    (14) arguments -> type . Array
    (16) dArray -> . ID Array
    (17) dArray -> . SQBRACL SQBRACR
    (18) dArray -> . ID SQBRACL SQBRACR
    (19) dArray -> . ID SQBRACL SQBRACR Array
    (20) dArray -> . SQBRACL SQBRACR Array
    (21) Array -> . SQBRACL NUM SQBRACR
    (22) Array -> . SQBRACL NUM SQBRACR Array

    RPRAN           reduce using rule 8 (arguments -> type .)
    COMMA           reduce using rule 8 (arguments -> type .)
    ID              shift and go to state 16
    SQBRACL         shift and go to state 19

    dArray                         shift and go to state 17
    Array                          shift and go to state 18

state 14

    (7) function -> LPRAN arguments RPRAN .

    SEMICOLON       reduce using rule 7 (function -> LPRAN arguments RPRAN .)


state 15

    (9) arguments -> arguments COMMA . type
    (11) arguments -> arguments COMMA . type ID
    (13) arguments -> arguments COMMA . type dArray
    (15) arguments -> arguments COMMA . type Array
    (2) type -> . INT
    (3) type -> . FLOAT
    (4) type -> . CHAR
    (5) type -> . DOUBLE
    (6) type -> . VOID

    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5
    DOUBLE          shift and go to state 6
    VOID            shift and go to state 7

    type                           shift and go to state 20

state 16

    (10) arguments -> type ID .
    (16) dArray -> ID . Array
    (18) dArray -> ID . SQBRACL SQBRACR
    (19) dArray -> ID . SQBRACL SQBRACR Array
    (21) Array -> . SQBRACL NUM SQBRACR
    (22) Array -> . SQBRACL NUM SQBRACR Array

    RPRAN           reduce using rule 10 (arguments -> type ID .)
    COMMA           reduce using rule 10 (arguments -> type ID .)
    SQBRACL         shift and go to state 22

    Array                          shift and go to state 21

state 17

    (12) arguments -> type dArray .

    RPRAN           reduce using rule 12 (arguments -> type dArray .)
    COMMA           reduce using rule 12 (arguments -> type dArray .)


state 18

    (14) arguments -> type Array .

    RPRAN           reduce using rule 14 (arguments -> type Array .)
    COMMA           reduce using rule 14 (arguments -> type Array .)


state 19

    (17) dArray -> SQBRACL . SQBRACR
    (20) dArray -> SQBRACL . SQBRACR Array
    (21) Array -> SQBRACL . NUM SQBRACR
    (22) Array -> SQBRACL . NUM SQBRACR Array

    SQBRACR         shift and go to state 23
    NUM             shift and go to state 24


state 20

    (9) arguments -> arguments COMMA type .
    (11) arguments -> arguments COMMA type . ID
    (13) arguments -> arguments COMMA type . dArray
    (15) arguments -> arguments COMMA type . Array
    (16) dArray -> . ID Array
    (17) dArray -> . SQBRACL SQBRACR
    (18) dArray -> . ID SQBRACL SQBRACR
    (19) dArray -> . ID SQBRACL SQBRACR Array
    (20) dArray -> . SQBRACL SQBRACR Array
    (21) Array -> . SQBRACL NUM SQBRACR
    (22) Array -> . SQBRACL NUM SQBRACR Array

    RPRAN           reduce using rule 9 (arguments -> arguments COMMA type .)
    COMMA           reduce using rule 9 (arguments -> arguments COMMA type .)
    ID              shift and go to state 25
    SQBRACL         shift and go to state 19

    dArray                         shift and go to state 26
    Array                          shift and go to state 27

state 21

    (16) dArray -> ID Array .

    RPRAN           reduce using rule 16 (dArray -> ID Array .)
    COMMA           reduce using rule 16 (dArray -> ID Array .)


state 22

    (18) dArray -> ID SQBRACL . SQBRACR
    (19) dArray -> ID SQBRACL . SQBRACR Array
    (21) Array -> SQBRACL . NUM SQBRACR
    (22) Array -> SQBRACL . NUM SQBRACR Array

    SQBRACR         shift and go to state 28
    NUM             shift and go to state 24


state 23

    (17) dArray -> SQBRACL SQBRACR .
    (20) dArray -> SQBRACL SQBRACR . Array
    (21) Array -> . SQBRACL NUM SQBRACR
    (22) Array -> . SQBRACL NUM SQBRACR Array

    RPRAN           reduce using rule 17 (dArray -> SQBRACL SQBRACR .)
    COMMA           reduce using rule 17 (dArray -> SQBRACL SQBRACR .)
    SQBRACL         shift and go to state 29

    Array                          shift and go to state 30

state 24

    (21) Array -> SQBRACL NUM . SQBRACR
    (22) Array -> SQBRACL NUM . SQBRACR Array

    SQBRACR         shift and go to state 31


state 25

    (11) arguments -> arguments COMMA type ID .
    (16) dArray -> ID . Array
    (18) dArray -> ID . SQBRACL SQBRACR
    (19) dArray -> ID . SQBRACL SQBRACR Array
    (21) Array -> . SQBRACL NUM SQBRACR
    (22) Array -> . SQBRACL NUM SQBRACR Array

    RPRAN           reduce using rule 11 (arguments -> arguments COMMA type ID .)
    COMMA           reduce using rule 11 (arguments -> arguments COMMA type ID .)
    SQBRACL         shift and go to state 22

    Array                          shift and go to state 21

state 26

    (13) arguments -> arguments COMMA type dArray .

    RPRAN           reduce using rule 13 (arguments -> arguments COMMA type dArray .)
    COMMA           reduce using rule 13 (arguments -> arguments COMMA type dArray .)


state 27

    (15) arguments -> arguments COMMA type Array .

    RPRAN           reduce using rule 15 (arguments -> arguments COMMA type Array .)
    COMMA           reduce using rule 15 (arguments -> arguments COMMA type Array .)


state 28

    (18) dArray -> ID SQBRACL SQBRACR .
    (19) dArray -> ID SQBRACL SQBRACR . Array
    (21) Array -> . SQBRACL NUM SQBRACR
    (22) Array -> . SQBRACL NUM SQBRACR Array

    RPRAN           reduce using rule 18 (dArray -> ID SQBRACL SQBRACR .)
    COMMA           reduce using rule 18 (dArray -> ID SQBRACL SQBRACR .)
    SQBRACL         shift and go to state 29

    Array                          shift and go to state 32

state 29

    (21) Array -> SQBRACL . NUM SQBRACR
    (22) Array -> SQBRACL . NUM SQBRACR Array

    NUM             shift and go to state 24


state 30

    (20) dArray -> SQBRACL SQBRACR Array .

    RPRAN           reduce using rule 20 (dArray -> SQBRACL SQBRACR Array .)
    COMMA           reduce using rule 20 (dArray -> SQBRACL SQBRACR Array .)


state 31

    (21) Array -> SQBRACL NUM SQBRACR .
    (22) Array -> SQBRACL NUM SQBRACR . Array
    (21) Array -> . SQBRACL NUM SQBRACR
    (22) Array -> . SQBRACL NUM SQBRACR Array

    RPRAN           reduce using rule 21 (Array -> SQBRACL NUM SQBRACR .)
    COMMA           reduce using rule 21 (Array -> SQBRACL NUM SQBRACR .)
    SQBRACL         shift and go to state 29

    Array                          shift and go to state 33

state 32

    (19) dArray -> ID SQBRACL SQBRACR Array .

    RPRAN           reduce using rule 19 (dArray -> ID SQBRACL SQBRACR Array .)
    COMMA           reduce using rule 19 (dArray -> ID SQBRACL SQBRACR Array .)


state 33

    (22) Array -> SQBRACL NUM SQBRACR Array .

    RPRAN           reduce using rule 22 (Array -> SQBRACL NUM SQBRACR Array .)
    COMMA           reduce using rule 22 (Array -> SQBRACL NUM SQBRACR Array .)

