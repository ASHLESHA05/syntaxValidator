Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statements
Rule 1     statements -> type declaration_list SEMICOLON
Rule 2     type -> INT
Rule 3     type -> FLOAT
Rule 4     type -> CHAR
Rule 5     type -> DOUBLE
Rule 6     declaration_list -> ID
Rule 7     declaration_list -> declaration_list COMMA ID

Terminals, with rules where they appear

CHAR                 : 4
COMMA                : 7
DOUBLE               : 5
FLOAT                : 3
ID                   : 6 7
INT                  : 2
SEMICOLON            : 1
error                : 

Nonterminals, with rules where they appear

declaration_list     : 1 7
statements           : 0
type                 : 1

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . type declaration_list SEMICOLON
    (2) type -> . INT
    (3) type -> . FLOAT
    (4) type -> . CHAR
    (5) type -> . DOUBLE

    INT             shift and go to state 3
    FLOAT           shift and go to state 4
    CHAR            shift and go to state 5
    DOUBLE          shift and go to state 6

    statements                     shift and go to state 1
    type                           shift and go to state 2

state 1

    (0) S' -> statements .



state 2

    (1) statements -> type . declaration_list SEMICOLON
    (6) declaration_list -> . ID
    (7) declaration_list -> . declaration_list COMMA ID

    ID              shift and go to state 8

    declaration_list               shift and go to state 7

state 3

    (2) type -> INT .

    ID              reduce using rule 2 (type -> INT .)


state 4

    (3) type -> FLOAT .

    ID              reduce using rule 3 (type -> FLOAT .)


state 5

    (4) type -> CHAR .

    ID              reduce using rule 4 (type -> CHAR .)


state 6

    (5) type -> DOUBLE .

    ID              reduce using rule 5 (type -> DOUBLE .)


state 7

    (1) statements -> type declaration_list . SEMICOLON
    (7) declaration_list -> declaration_list . COMMA ID

    SEMICOLON       shift and go to state 9
    COMMA           shift and go to state 10


state 8

    (6) declaration_list -> ID .

    SEMICOLON       reduce using rule 6 (declaration_list -> ID .)
    COMMA           reduce using rule 6 (declaration_list -> ID .)


state 9

    (1) statements -> type declaration_list SEMICOLON .

    $end            reduce using rule 1 (statements -> type declaration_list SEMICOLON .)


state 10

    (7) declaration_list -> declaration_list COMMA . ID

    ID              shift and go to state 11


state 11

    (7) declaration_list -> declaration_list COMMA ID .

    SEMICOLON       reduce using rule 7 (declaration_list -> declaration_list COMMA ID .)
    COMMA           reduce using rule 7 (declaration_list -> declaration_list COMMA ID .)

